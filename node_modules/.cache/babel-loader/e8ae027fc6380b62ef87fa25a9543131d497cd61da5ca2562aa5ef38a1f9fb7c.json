{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loadState } from \"../../helpers/localstorage.helper\";\nconst localStorageState = loadState();\n\n// const initialState = [...localStorageState];\nconst initialState = [{\n  'id': '123'\n}];\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    updateTodo: (state, action) => {\n      const todo = state.find(t => t.id === action.payload);\n      todo.completed = !todo.completed;\n    },\n    removeTodo: (state, action) => {\n      return state.filter(t => t.id !== action.payload);\n    },\n    removeCompletedTodo: state => {\n      return state.filter(t => t.completed !== true);\n    },\n    reorderTodoArray: (state, action) => {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  add,\n  update,\n  removeTodo,\n  removeCompletedTodo,\n  reorderTodoArray\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","loadState","localStorageState","initialState","todoSlice","name","reducers","addTodo","state","action","push","payload","updateTodo","todo","find","t","id","completed","removeTodo","filter","removeCompletedTodo","reorderTodoArray","add","update","actions","reducer"],"sources":["/Users/stefantodorov/code/package/src/store/reducers/todo.reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { loadState } from \"../../helpers/localstorage.helper\";\n\nconst localStorageState = loadState();\n\n// const initialState = [...localStorageState];\nconst initialState = [{ 'id' : '123'}]\n\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      state.push(action.payload);\n    },\n    updateTodo: (state, action) => {\n      const todo = state.find((t) => t.id === action.payload);\n      todo.completed = !todo.completed;\n    },\n    removeTodo: (state, action) => {\n      return state.filter((t) => t.id !== action.payload);\n    },\n    removeCompletedTodo: (state) => {\n      return state.filter((t) => t.completed !== true);\n    },\n    reorderTodoArray: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\n\nexport const { add, update, removeTodo, removeCompletedTodo, reorderTodoArray } =\n  todoSlice.actions;\n\nexport default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,mCAAmC;AAE7D,MAAMC,iBAAiB,GAAGD,SAAS,CAAC,CAAC;;AAErC;AACA,MAAME,YAAY,GAAG,CAAC;EAAE,IAAI,EAAG;AAAK,CAAC,CAAC;AAEtC,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,UAAU,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMI,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;MACvDE,IAAI,CAACI,SAAS,GAAG,CAACJ,IAAI,CAACI,SAAS;IAClC,CAAC;IACDC,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACW,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;IACrD,CAAC;IACDS,mBAAmB,EAAGZ,KAAK,IAAK;MAC9B,OAAOA,KAAK,CAACW,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACE,SAAS,KAAK,IAAI,CAAC;IAClD,CAAC;IACDI,gBAAgB,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MACnC,OAAOA,MAAM,CAACE,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEW,GAAG;EAAEC,MAAM;EAAEL,UAAU;EAAEE,mBAAmB;EAAEC;AAAiB,CAAC,GAC7EjB,SAAS,CAACoB,OAAO;AAEnB,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}