{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{loadState}from\"../../helpers/localstorage.helper\";var localStorageState=loadState();// const initialState = [...localStorageState];\nvar initialState=[{'id':'123'}];export var todoSlice=createSlice({name:\"todo\",initialState:initialState,reducers:{add:function add(state,action){state.push(action.payload);},update:function update(state,action){var todo=state.find(function(t){return t.id===action.payload;});todo.completed=!todo.completed;},remove:function remove(state,action){return state.filter(function(t){return t.id!==action.payload;});},removeCompleted:function removeCompleted(state){return state.filter(function(t){return t.completed!==true;});},reorderArray:function reorderArray(state,action){return action.payload;}}});var _todoSlice$actions=todoSlice.actions,add=_todoSlice$actions.add,update=_todoSlice$actions.update,remove=_todoSlice$actions.remove,removeCompleted=_todoSlice$actions.removeCompleted,reorderArray=_todoSlice$actions.reorderArray;export{add,update,remove,removeCompleted,reorderArray};export default todoSlice.reducer;","map":{"version":3,"names":["createSlice","loadState","localStorageState","initialState","todoSlice","name","reducers","add","state","action","push","payload","update","todo","find","t","id","completed","remove","filter","removeCompleted","reorderArray","_todoSlice$actions","actions","reducer"],"sources":["/Users/stefantodorov/code/react-todo-app/src/store/reducers/todo.reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { loadState } from \"../../helpers/localstorage.helper\";\n\nconst localStorageState = loadState();\n\n// const initialState = [...localStorageState];\nconst initialState = [{ 'id' : '123'}]\n\nexport const todoSlice = createSlice({\n  name: \"todo\",\n  initialState,\n  reducers: {\n    add: (state, action) => {\n      state.push(action.payload);\n    },\n    update: (state, action) => {\n      const todo = state.find((t) => t.id === action.payload);\n      todo.completed = !todo.completed;\n    },\n    remove: (state, action) => {\n      return state.filter((t) => t.id !== action.payload);\n    },\n    removeCompleted: (state) => {\n      return state.filter((t) => t.completed !== true);\n    },\n    reorderArray: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\n\nexport const { add, update, remove, removeCompleted, reorderArray } =\n  todoSlice.actions;\n\nexport default todoSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,SAAS,KAAQ,mCAAmC,CAE7D,GAAM,CAAAC,iBAAiB,CAAGD,SAAS,CAAC,CAAC,CAErC;AACA,GAAM,CAAAE,YAAY,CAAG,CAAC,CAAE,IAAI,CAAG,KAAK,CAAC,CAAC,CAEtC,MAAO,IAAM,CAAAC,SAAS,CAAGJ,WAAW,CAAC,CACnCK,IAAI,CAAE,MAAM,CACZF,YAAY,CAAZA,YAAY,CACZG,QAAQ,CAAE,CACRC,GAAG,CAAE,SAAAA,IAACC,KAAK,CAAEC,MAAM,CAAK,CACtBD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC,CAC5B,CAAC,CACDC,MAAM,CAAE,SAAAA,OAACJ,KAAK,CAAEC,MAAM,CAAK,CACzB,GAAM,CAAAI,IAAI,CAAGL,KAAK,CAACM,IAAI,CAAC,SAACC,CAAC,QAAK,CAAAA,CAAC,CAACC,EAAE,GAAKP,MAAM,CAACE,OAAO,GAAC,CACvDE,IAAI,CAACI,SAAS,CAAG,CAACJ,IAAI,CAACI,SAAS,CAClC,CAAC,CACDC,MAAM,CAAE,SAAAA,OAACV,KAAK,CAAEC,MAAM,CAAK,CACzB,MAAO,CAAAD,KAAK,CAACW,MAAM,CAAC,SAACJ,CAAC,QAAK,CAAAA,CAAC,CAACC,EAAE,GAAKP,MAAM,CAACE,OAAO,GAAC,CACrD,CAAC,CACDS,eAAe,CAAE,SAAAA,gBAACZ,KAAK,CAAK,CAC1B,MAAO,CAAAA,KAAK,CAACW,MAAM,CAAC,SAACJ,CAAC,QAAK,CAAAA,CAAC,CAACE,SAAS,GAAK,IAAI,GAAC,CAClD,CAAC,CACDI,YAAY,CAAE,SAAAA,aAACb,KAAK,CAAEC,MAAM,CAAK,CAC/B,MAAO,CAAAA,MAAM,CAACE,OAAO,CACvB,CACF,CACF,CAAC,CAAC,CAGK,IAAAW,kBAAA,CACLlB,SAAS,CAACmB,OAAO,CADJhB,GAAG,CAAAe,kBAAA,CAAHf,GAAG,CAAEK,MAAM,CAAAU,kBAAA,CAANV,MAAM,CAAEM,MAAM,CAAAI,kBAAA,CAANJ,MAAM,CAAEE,eAAe,CAAAE,kBAAA,CAAfF,eAAe,CAAEC,YAAY,CAAAC,kBAAA,CAAZD,YAAY,CAC7C,OAAAd,GAAA,CAAAK,MAAA,CAAAM,MAAA,CAAAE,eAAA,CAAAC,YAAA,EAEpB,cAAe,CAAAjB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}